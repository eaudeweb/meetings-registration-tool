
# Copyright 2013-2014 Sebastian Kreft
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Regular expression matchers like \d, \w, must be escaped as in \\d, \\w.

# CSS
# Sample output:
# /home/skreft/opensource/git-lint/test/e2etest/data/csslint/error.css: line 3, col 2, Warning - Duplicate property 'width' found.
csslint:
  extensions:
  - .css
  command: csslint
  arguments:
  - "--ignore=ids,box-model,adjoining-classes,qualified-headings,unique-headings,zero-units"
  - "--format=compact"
  filter: "^%(filename)s: line (?P<line>%(lines)s), col (?P<column>\\d+)?, (?P<severity>\\S+) - (?P<message>.+)"
  installation: "Go to https://github.com/stubbornella/csslint/wiki/Command-line-interface for installation instructions."


# Sample output:
# /home/skreft/opensource/git-lint/test/e2etest/data/jshint/error.js: line 1, col 3, Use '===' to compare with ''.
jshint:
  extensions:
  - .js
  command: jshint
  arguments:
  - "--config"
  - "%(DEFAULT_CONFIGS)s/jshint.json"
  filter: "^%(filename)s: line (?P<line>%(lines)s), col (?P<column>\\d+), (?P<message>.+)"
  installation: "Visit http://www.jshint.com/install/ for installation instructions."

# Sample output: gitlint/__init__.py:68:80: E501 line too long (80 > 79 characters)
pep8:
  extensions:
  - .py
  command: pep8
  arguments:
  - "--max-line-length=80 --exclude=alembic"
  filter: "^%(filename)s:(?P<line>%(lines)s):((?P<column>\\d+):)? (?P<message_id>\\S+) (?P<message>.+)$"
  installation: "Run pip install pep8."

# JSON
# Sample output:
# Expecting property name: line 3 column 5 (char 15)
json:
  extensions:
  - .json
  command: python
  arguments:
  - "-m"
  - "json.tool"
  # enforce that here comes a colon
  filter: "^(?P<message>[^:]+(?=: line \\d+ column \\d+)|No JSON object could be decoded)(: line (?P<line>\\d+) column (?P<column>\\d+).*)?$"
  installation: "Nothing else should be required."

# RST
# Sample output:
# /home/skreft/opensource/git-lint/test/e2etest/data/rst/error.rst:3: (WARNING/2) Inline interpreted text or phrase reference start-string without end-string.
rst:
  extensions:
  - .rst
  command: rst2html.py
  filter: "^%(filename)s:(?P<line>%(lines)s): [(](?P<severity>.+)[)] (?P<message>.+)"
  installation: "Run pip install docutils."


# Sample output:
# 1:10: Error: Javascript ...
html_lint:
  extensions:
  - .html
  command: html_lint.py
  arguments:
  - "--disable"
  - "optional_tag"
  installation: "pip install html-linter."
  filter: "^(?P<line>%(lines)s):(?P<column>\\d+): (?P<severity>\\S+): (?P<message>.+)"

