version: '2.1'

services:

  mediaserver:
    container_name: mrt.nginx
    restart: on-failure

  app:
    container_name: mrt.app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    environment:
     - FLASK_MIGRATE=off
     - FLASK_CREATE_SUPERUSER=off
    healthcheck:
      test: "curl -f --max-time 1 http://localhost:5000 || exit 1"
      interval: 10s
      timeout: 2s
      retries: 3

  async:
    container_name: mrt.rq
    restart: on-failure

  redis:
    container_name: mrt.redis
    restart: on-failure
    healthcheck:
      test: "redis-cli -h 127.0.0.1 ping"
      interval: 30s
      timeout: 30s
      retries: 3

  db:
    container_name: mrt.db
    restart: on-failure
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 30s
      timeout: 30s
      retries: 3

  log:
    image: gliderlabs/logspout:v3.2.5
    container_name: mrt.logs
    restart: on-failure
    environment:
     - TZ=Europe/Copenhagen
    env_file:
      - docker/log.env
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    command: 'syslog://$${HOST}:$${PORT}?filter.name=$${FILTER}'

volumes:
  app-files:
    driver: local
  app-data:
    driver: local
