version: '2'

services:

  nginx:
    image: nginx:1.13-alpine
    ports:
    - "127.0.0.1:5050:80"
    environment:
      NGINX_CONF: |-
        server {
          listen 80;

          access_log /var/log/nginx/access.log main;

          location /static/files {
            sendfile on;
            tcp_nopush on;
            gzip on;
            gzip_types text/plain application/x-javascript text/css;
            expires 30d;
            alias /var/local/meetings/instance/files;
          }
        }
    depends_on:
    - mrt
    volumes:
    - mrt-files:/var/local/meetings/instance/files:ro
    command: /bin/sh -c 'echo "$$NGINX_CONF" > /etc/nginx/conf.d/default.conf && exec nginx -g "daemon off;"'

  mrt:
    image: eaudeweb/mrt:2.6
    container_name: mrt.app
    env_file:
    - docker/app.env
    ports:
    - "127.0.0.1:5000:5000"
    links:
    - postgres:postgres
    - redis:redis
    volumes:
    - ./settings.py:/var/local/meetings/instance/settings.py:ro
    - mrt-files:/var/local/meetings/instance/files

  async:
    image: eaudeweb/mrt:2.6
    container_name: mrt.rq
    links:
    - redis:redis
    - postgres:postgres
    volumes:
    - /var/local/meetings/.skip-db-init
    - ./settings.py:/var/local/meetings/instance/settings.py:ro
    - mrt-files:/var/local/meetings/instance/files/
    command: ["rq", "workers", "printouts"]

  redis:
    image: redis:3.2.10-alpine
    container_name: mrt.redis

  postgres:
    image: postgres:9
    container_name: mrt.db
    env_file:
    - docker/postgres.env
    volumes:
    - mrt-data:/var/lib/postgresql/data
    - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql

  logspout:
    image: gliderlabs/logspout:v3.2.2
    container_name: mrt.logs
    command: 'syslog://$${HOST}:$${PORT}?filter.name=mrt.*'
    env_file:
    - docker/log.env
    volumes:
    - '/var/run/docker.sock:/tmp/docker.sock'

volumes:
  mrt-files:
    driver: local
  mrt-data:
    driver: local
